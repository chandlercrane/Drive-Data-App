#import <Foundation/Foundation.h>
#import "MBVSignType.h"
#include "VisionCore/util/object.hpp"

NS_ASSUME_NONNULL_BEGIN

MBVSignType coreSignTypeToMBVSignType(cva::SignType type) {
  switch (type) {
    case cva::SignType::Unknown:
      return MBVSignTypeUnknown;
    case cva::SignType::SpeedLimit:
      return MBVSignTypeSpeedLimit;
    case cva::SignType::SpeedLimitEnd:
      return MBVSignTypeSpeedLimitEnd;
    case cva::SignType::SpeedLimitMin:
      return MBVSignTypeSpeedLimitMin;
    case cva::SignType::SpeedLimitNight:
      return MBVSignTypeSpeedLimitNight;
    case cva::SignType::SpeedLimitTrucks:
      return MBVSignTypeSpeedLimitTrucks;
    case cva::SignType::Mass:
      return MBVSignTypeMass;
    case cva::SignType::SpeedLimitComplementary:
      return MBVSignTypeSpeedLimitComplementary;
    case cva::SignType::SpeedLimitExit:
      return MBVSignTypeSpeedLimitExit;
    case cva::SignType::SpeedLimitRamp:
      return MBVSignTypeSpeedLimitRamp;
    case cva::SignType::WarningTurnLeft:
      return MBVSignTypeWarningTurnLeft;
    case cva::SignType::WarningTurnRight:
      return MBVSignTypeWarningTurnRight;
    case cva::SignType::WarningHairpinCurveLeft:
      return MBVSignTypeWarningHairpinCurveLeft;
    case cva::SignType::WarningRoundabout:
      return MBVSignTypeWarningRoundabout;
    case cva::SignType::WarningSpeedBump:
      return MBVSignTypeWarningSpeedBump;
    case cva::SignType::WarningWindingRoad:
      return MBVSignTypeWarningWindingRoad;
    case cva::SignType::InformationBikeRoute:
      return MBVSignTypeInformationBikeRoute;
    case cva::SignType::InformationParking:
      return MBVSignTypeInformationParking;
    case cva::SignType::RegulatoryAllDirectionsPermitted:
      return MBVSignTypeRegulatoryAllDirectionsPermitted;
    case cva::SignType::RegulatoryBicyclesOnly:
      return MBVSignTypeRegulatoryBicyclesOnly;
    case cva::SignType::RegulatoryDoNotPass:
      return MBVSignTypeRegulatoryDoNotPass;
    case cva::SignType::RegulatoryDoNotDriveOnShoulder:
      return MBVSignTypeRegulatoryDoNotDriveOnShoulder;
    case cva::SignType::RegulatoryDualLanesAllDirectionsOnRight:
      return MBVSignTypeRegulatoryDualLanesAllDirectionsOnRight;
    case cva::SignType::RegulatoryDualLanesGoLeftOrRight:
      return MBVSignTypeRegulatoryDualLanesGoLeftOrRight;
    case cva::SignType::RegulatoryDualLanesGoStraightOnLeft:
      return MBVSignTypeRegulatoryDualLanesGoStraightOnLeft;
    case cva::SignType::RegulatoryDualLanesGoStraightOnRight:
      return MBVSignTypeRegulatoryDualLanesGoStraightOnRight;
    case cva::SignType::RegulatoryDualLanesTurnLeft:
      return MBVSignTypeRegulatoryDualLanesTurnLeft;
    case cva::SignType::RegulatoryDualLanesTurnLeftOrStraight:
      return MBVSignTypeRegulatoryDualLanesTurnLeftOrStraight;
    case cva::SignType::RegulatoryDualLanesTurnRightOrStraight:
      return MBVSignTypeRegulatoryDualLanesTurnRightOrStraight;
    case cva::SignType::RegulatoryEndOfSchoolZone:
      return MBVSignTypeRegulatoryEndOfSchoolZone;
    case cva::SignType::RegulatoryGoStraight:
      return MBVSignTypeRegulatoryGoStraight;
    case cva::SignType::RegulatoryGoStraightOrTurnLeft:
      return MBVSignTypeRegulatoryGoStraightOrTurnLeft;
    case cva::SignType::RegulatoryGoStraightOrTurnRight:
      return MBVSignTypeRegulatoryGoStraightOrTurnRight;
    case cva::SignType::RegulatoryHeightLimit:
      return MBVSignTypeRegulatoryHeightLimit;
    case cva::SignType::RegulatoryLeftTurnYieldOnGreen:
      return MBVSignTypeRegulatoryLeftTurnYieldOnGreen;
    case cva::SignType::RegulatoryNoBicycles:
      return MBVSignTypeRegulatoryNoBicycles;
    case cva::SignType::RegulatoryNoEntry:
      return MBVSignTypeRegulatoryNoEntry;
    case cva::SignType::RegulatoryNoLeftOrUTurn:
      return MBVSignTypeRegulatoryNoLeftOrUTurn;
    case cva::SignType::RegulatoryNoLeftTurn:
      return MBVSignTypeRegulatoryNoLeftTurn;
    case cva::SignType::RegulatoryNoMotorVehicles:
      return MBVSignTypeRegulatoryNoMotorVehicles;
    case cva::SignType::RegulatoryNoParking:
      return MBVSignTypeRegulatoryNoParking;
    case cva::SignType::RegulatoryNoParkingOrNoStopping:
      return MBVSignTypeRegulatoryNoParkingOrNoStopping;
    case cva::SignType::RegulatoryNoPedestrians:
      return MBVSignTypeRegulatoryNoPedestrians;
    case cva::SignType::RegulatoryNoRightTurn:
      return MBVSignTypeRegulatoryNoRightTurn;
    case cva::SignType::RegulatoryNoStopping:
      return MBVSignTypeRegulatoryNoStopping;
    case cva::SignType::RegulatoryNoStraightThrough:
      return MBVSignTypeRegulatoryNoStraightThrough;
    case cva::SignType::RegulatoryNoUTurn:
      return MBVSignTypeRegulatoryNoUTurn;
    case cva::SignType::RegulatoryOneWayStraight:
      return MBVSignTypeRegulatoryOneWayStraight;
    case cva::SignType::RegulatoryReversibleLanes:
      return MBVSignTypeRegulatoryReversibleLanes;
    case cva::SignType::RegulatoryRoadClosedToVehicles:
      return MBVSignTypeRegulatoryRoadClosedToVehicles;
    case cva::SignType::RegulatoryStop:
      return MBVSignTypeRegulatoryStop;
    case cva::SignType::RegulatoryTrafficSignalPhotoEnforced:
      return MBVSignTypeRegulatoryTrafficSignalPhotoEnforced;
    case cva::SignType::RegulatoryTripleLanesGoStraightCenterLane:
      return MBVSignTypeRegulatoryTripleLanesGoStraightCenterLane;
    case cva::SignType::WarningBicyclesCrossing:
      return MBVSignTypeWarningBicyclesCrossing;
    case cva::SignType::WarningHeightRestriction:
      return MBVSignTypeWarningHeightRestriction;
    case cva::SignType::WarningPassLeftOrRight:
      return MBVSignTypeWarningPassLeftOrRight;
    case cva::SignType::WarningPedestriansCrossing:
      return MBVSignTypeWarningPedestriansCrossing;
    case cva::SignType::WarningRoadNarrowsLeft:
      return MBVSignTypeWarningRoadNarrowsLeft;
    case cva::SignType::WarningRoadNarrowsRight:
      return MBVSignTypeWarningRoadNarrowsRight;
    case cva::SignType::WarningSchoolZone:
      return MBVSignTypeWarningSchoolZone;
    case cva::SignType::WarningStopAhead:
      return MBVSignTypeWarningStopAhead;
    case cva::SignType::WarningTrafficSignals:
      return MBVSignTypeWarningTrafficSignals;
    case cva::SignType::WarningTwoWayTraffic:
      return MBVSignTypeWarningTwoWayTraffic;
    case cva::SignType::WarningYieldAhead:
      return MBVSignTypeWarningYieldAhead;
    case cva::SignType::InformationHighway:
      return MBVSignTypeInformationHighway;
    case cva::SignType::RegulatoryDoNotBlockIntersection:
      return MBVSignTypeRegulatoryDoNotBlockIntersection;
    case cva::SignType::RegulatoryKeepRightPicture:
      return MBVSignTypeRegulatoryKeepRightPicture;
    case cva::SignType::RegulatoryKeepRightText:
      return MBVSignTypeRegulatoryKeepRightText;
    case cva::SignType::RegulatoryNoHeavyGoodsVehiclesPicture:
      return MBVSignTypeRegulatoryNoHeavyGoodsVehiclesPicture;
    case cva::SignType::RegulatoryNoLeftTurnText:
      return MBVSignTypeRegulatoryNoLeftTurnText;
    case cva::SignType::RegulatoryOneWayLeftArrow:
      return MBVSignTypeRegulatoryOneWayLeftArrow;
    case cva::SignType::RegulatoryOneWayLeftArrowText:
      return MBVSignTypeRegulatoryOneWayLeftArrowText;
    case cva::SignType::RegulatoryOneWayLeftText:
      return MBVSignTypeRegulatoryOneWayLeftText;
    case cva::SignType::RegulatoryOneWayRightArrow:
      return MBVSignTypeRegulatoryOneWayRightArrow;
    case cva::SignType::RegulatoryOneWayRightArrowText:
      return MBVSignTypeRegulatoryOneWayRightArrowText;
    case cva::SignType::RegulatoryOneWayRightText:
      return MBVSignTypeRegulatoryOneWayRightText;
    case cva::SignType::RegulatoryTurnLeftAhead:
      return MBVSignTypeRegulatoryTurnLeftAhead;
    case cva::SignType::RegulatoryTurnLeft:
      return MBVSignTypeRegulatoryTurnLeft;
    case cva::SignType::RegulatoryTurnLeftOrRight:
      return MBVSignTypeRegulatoryTurnLeftOrRight;
    case cva::SignType::RegulatoryTurnRightAhead:
      return MBVSignTypeRegulatoryTurnRightAhead;
    case cva::SignType::RegulatoryYield:
      return MBVSignTypeRegulatoryYield;
    case cva::SignType::WarningRailwayCrossing:
      return MBVSignTypeWarningRailwayCrossing;
    case cva::SignType::WarningHairpinCurveRight:
      return MBVSignTypeWarningHairpinCurveRight;
    case cva::SignType::ComplementaryOneDirectionLeft:
      return MBVSignTypeComplementaryOneDirectionLeft;
    case cva::SignType::ComplementaryOneDirectionRight:
      return MBVSignTypeComplementaryOneDirectionRight;
    case cva::SignType::WarningCurveLeft:
      return MBVSignTypeWarningCurveLeft;
    case cva::SignType::WarningCurveRight:
      return MBVSignTypeWarningCurveRight;
    case cva::SignType::WarningHorizontalAlignmentLeft:
      return MBVSignTypeWarningHorizontalAlignmentLeft;
    case cva::SignType::WarningHorizontalAlignmentRight:
      return MBVSignTypeWarningHorizontalAlignmentRight;
    case cva::SignType::RegulatoryTurnRight:
      return MBVSignTypeRegulatoryTurnRight;
    case cva::SignType::WhiteTablesText:
      return MBVSignTypeWhiteTablesText;
    case cva::SignType::Lanes:
      return MBVSignTypeLanes;
    case cva::SignType::GreenPlates:
      return MBVSignTypeGreenPlates;
    case cva::SignType::WarningText:
      return MBVSignTypeWarningText;
    case cva::SignType::WarningCrossroads:
      return MBVSignTypeWarningCrossroads;
    case cva::SignType::WarningPicture:
      return MBVSignTypeWarningPicture;
    case cva::SignType::ComplementaryKeepLeft:
      return MBVSignTypeComplementaryKeepLeft;
    case cva::SignType::ComplementaryKeepRight:
      return MBVSignTypeComplementaryKeepRight;
    case cva::SignType::RegulatoryExceptBicycle:
      return MBVSignTypeRegulatoryExceptBicycle;
    case cva::SignType::WarningAddedLaneRight:
      return MBVSignTypeWarningAddedLaneRight;
    case cva::SignType::WarningDeadEndText:
      return MBVSignTypeWarningDeadEndText;
    case cva::SignType::WarningDipText:
      return MBVSignTypeWarningDipText;
    case cva::SignType::WarningEmergencyVehicles:
      return MBVSignTypeWarningEmergencyVehicles;
    case cva::SignType::WarningEndText:
      return MBVSignTypeWarningEndText;
    case cva::SignType::WarningFallingRocksOrDebrisRight:
      return MBVSignTypeWarningFallingRocksOrDebrisRight;
    case cva::SignType::WarningLowGroundClearance:
      return MBVSignTypeWarningLowGroundClearance;
    case cva::SignType::WarningObstructionMarker:
      return MBVSignTypeWarningObstructionMarker;
    case cva::SignType::WarningPlayground:
      return MBVSignTypeWarningPlayground;
    case cva::SignType::WarningSecondRoadRight:
      return MBVSignTypeWarningSecondRoadRight;
    case cva::SignType::WarningTurnLeftOnlyArrow:
      return MBVSignTypeWarningTurnLeftOnlyArrow;
    case cva::SignType::WarningTurnLeftOrRightOnlyArrow:
      return MBVSignTypeWarningTurnLeftOrRightOnlyArrow;
    case cva::SignType::WarningTramsCrossing:
      return MBVSignTypeWarningTramsCrossing;
    case cva::SignType::WarningUnevenRoad:
      return MBVSignTypeWarningUnevenRoad;
    case cva::SignType::WarningWildAnimals:
      return MBVSignTypeWarningWildAnimals;
    case cva::SignType::RegulatoryParkingRestrictions:
      return MBVSignTypeRegulatoryParkingRestrictions;
    case cva::SignType::RegulatoryYieldOrStopForPedestrians:
      return MBVSignTypeRegulatoryYieldOrStopForPedestrians;
    case cva::SignType::RegulatoryNoBuses:
      return MBVSignTypeRegulatoryNoBuses;
    case cva::SignType::RegulatoryNoMotorcyclesOrMopeds:
      return MBVSignTypeRegulatoryNoMotorcyclesOrMopeds;
    case cva::SignType::RegulatoryNoTurnLeftOrTurnRight:
      return MBVSignTypeRegulatoryNoTurnLeftOrTurnRight;
    case cva::SignType::RegulatoryNoOvertaking:
      return MBVSignTypeRegulatoryNoOvertaking;
    case cva::SignType::RegulatoryNoHonking:
      return MBVSignTypeRegulatoryNoHonking;
    case cva::SignType::RegulatoryWidthLimit:
      return MBVSignTypeRegulatoryWidthLimit;
    case cva::SignType::RegulatoryAxleWeightLimit:
      return MBVSignTypeRegulatoryAxleWeightLimit;
    case cva::SignType::RegulatoryNoVehiclesCarryingExplosives:
      return MBVSignTypeRegulatoryNoVehiclesCarryingExplosives;
    case cva::SignType::RegulatoryRoundabout:
      return MBVSignTypeRegulatoryRoundabout;
    case cva::SignType::RegulatoryHonking:
      return MBVSignTypeRegulatoryHonking;
    case cva::SignType::RegulatoryPedestriansCrossing:
      return MBVSignTypeRegulatoryPedestriansCrossing;
    case cva::SignType::RegulatoryMotorVehicles:
      return MBVSignTypeRegulatoryMotorVehicles;
    case cva::SignType::RegulatoryUTurn:
      return MBVSignTypeRegulatoryUTurn;
    case cva::SignType::WarningSteepAscent:
      return MBVSignTypeWarningSteepAscent;
    case cva::SignType::WarningSteepDescent:
      return MBVSignTypeWarningSteepDescent;
    case cva::SignType::WarningVillage:
      return MBVSignTypeWarningVillage;
    case cva::SignType::RegulatoryNoSmallPassengerCar:
      return MBVSignTypeRegulatoryNoSmallPassengerCar;
    case cva::SignType::WarningKeepSlowdown:
      return MBVSignTypeWarningKeepSlowdown;
    case cva::SignType::WarningDangerousTraffic:
      return MBVSignTypeWarningDangerousTraffic;
    case cva::SignType::WarningRoadworks:
      return MBVSignTypeWarningRoadworks;
    case cva::SignType::WarningSecondRoadLeft:
      return MBVSignTypeWarningSecondRoadLeft;
    case cva::SignType::RegulatoryNoTurnOnRedText:
      return MBVSignTypeRegulatoryNoTurnOnRedText;
    case cva::SignType::WarningAddedLaneLeft:
      return MBVSignTypeWarningAddedLaneLeft;
    case cva::SignType::WarningFlaggersInRoad:
      return MBVSignTypeWarningFlaggersInRoad;
    case cva::SignType::WarningLoop270Degree:
      return MBVSignTypeWarningLoop270Degree;
    case cva::SignType::WarningRoadNarrows:
      return MBVSignTypeWarningRoadNarrows;
    case cva::SignType::WarningSlipperyRoadSurface:
      return MBVSignTypeWarningSlipperyRoadSurface;
    case cva::SignType::RegulatoryBusLane:
      return MBVSignTypeRegulatoryBusLane;
    case cva::SignType::RegulatoryEndNoOvertaking:
      return MBVSignTypeRegulatoryEndNoOvertaking;
    case cva::SignType::RegulatoryNoHumanCargoTricycleEntry:
      return MBVSignTypeRegulatoryNoHumanCargoTricycleEntry;
    case cva::SignType::RegulatoryNoHumanPassengerTricycleEntry:
      return MBVSignTypeRegulatoryNoHumanPassengerTricycleEntry;
    case cva::SignType::RegulatoryNoRickshaws:
      return MBVSignTypeRegulatoryNoRickshaws;
    case cva::SignType::RegulatoryNoStraightThroughOrTurnLeft:
      return MBVSignTypeRegulatoryNoStraightThroughOrTurnLeft;
    case cva::SignType::RegulatoryNoStraightThroughOrTurnRight:
      return MBVSignTypeRegulatoryNoStraightThroughOrTurnRight;
    case cva::SignType::RegulatoryNoTractors:
      return MBVSignTypeRegulatoryNoTractors;
    case cva::SignType::RegulatoryNoTricycles:
      return MBVSignTypeRegulatoryNoTricycles;
    case cva::SignType::RegulatoryUTurnOrTurnLeft:
      return MBVSignTypeRegulatoryUTurnOrTurnLeft;
    case cva::SignType::RegulatoryWalk:
      return MBVSignTypeRegulatoryWalk;
    case cva::SignType::WarningDangerousMountainRoadLeft:
      return MBVSignTypeWarningDangerousMountainRoadLeft;
    case cva::SignType::WarningDangerousMountainRoadRight:
      return MBVSignTypeWarningDangerousMountainRoadRight;
    case cva::SignType::WarningDomesticAnimals:
      return MBVSignTypeWarningDomesticAnimals;
    case cva::SignType::WarningFallingRocksOrDebrisLeft:
      return MBVSignTypeWarningFallingRocksOrDebrisLeft;
    case cva::SignType::WarningHazardLane:
      return MBVSignTypeWarningHazardLane;
    case cva::SignType::WarningRailroadCrossingWithoutBarriers:
      return MBVSignTypeWarningRailroadCrossingWithoutBarriers;
    case cva::SignType::WarningReverseCurveLeft:
      return MBVSignTypeWarningReverseCurveLeft;
    case cva::SignType::WarningReverseCurveRight:
      return MBVSignTypeWarningReverseCurveRight;
    case cva::SignType::WarningSoftShoulderLeft:
      return MBVSignTypeWarningSoftShoulderLeft;
    case cva::SignType::WarningSoftShoulderRight:
      return MBVSignTypeWarningSoftShoulderRight;
    case cva::SignType::WarningTunnel:
      return MBVSignTypeWarningTunnel;
    case cva::SignType::WarningWaterPavement:
      return MBVSignTypeWarningWaterPavement;
    case cva::SignType::SpeedLimitAdvMax:
      return MBVSignTypeSpeedLimitAdvMax;
    case cva::SignType::SpeedLimitEndAdv:
      return MBVSignTypeSpeedLimitEndAdv;
    case cva::SignType::RegulatoryEndLimitedAccessRoad:
      return MBVSignTypeRegulatoryEndLimitedAccessRoad;
    case cva::SignType::RegulatoryEndMotorway:
      return MBVSignTypeRegulatoryEndMotorway;
    case cva::SignType::RegulatoryEquestriansOnly:
      return MBVSignTypeRegulatoryEquestriansOnly;
    case cva::SignType::RegulatoryGasStation:
      return MBVSignTypeRegulatoryGasStation;
    case cva::SignType::InformationHospital:
      return MBVSignTypeInformationHospital;
    case cva::SignType::InformationLivingStreet:
      return MBVSignTypeInformationLivingStreet;
    case cva::SignType::RegulatoryMotorway:
      return MBVSignTypeRegulatoryMotorway;
    case cva::SignType::RegulatorySharedLaneBicyclesPedestrians:
      return MBVSignTypeRegulatorySharedLaneBicyclesPedestrians;
    case cva::SignType::RegulatoryEndPriorityRoad:
      return MBVSignTypeRegulatoryEndPriorityRoad;
    case cva::SignType::RegulatoryEndProhibition:
      return MBVSignTypeRegulatoryEndProhibition;
    case cva::SignType::RegulatoryGiveWayToOncomingTraffic:
      return MBVSignTypeRegulatoryGiveWayToOncomingTraffic;
    case cva::SignType::RegulatoryMinSafeDist:
      return MBVSignTypeRegulatoryMinSafeDist;
    case cva::SignType::RegulatoryNoDangerGoods:
      return MBVSignTypeRegulatoryNoDangerGoods;
    case cva::SignType::RegulatoryNoOverHeavy:
      return MBVSignTypeRegulatoryNoOverHeavy;
    case cva::SignType::RegulatoryPriorityOverOncomingTraffic:
      return MBVSignTypeRegulatoryPriorityOverOncomingTraffic;
    case cva::SignType::RegulatoryPriorityRoad:
      return MBVSignTypeRegulatoryPriorityRoad;
    case cva::SignType::RegulatoryWeightLimit:
      return MBVSignTypeRegulatoryWeightLimit;
    case cva::SignType::WarningDangerousCrosswinds:
      return MBVSignTypeWarningDangerousCrosswinds;
    case cva::SignType::WarningIcyRoad:
      return MBVSignTypeWarningIcyRoad;
    case cva::SignType::WarningLowFlyingAircraft:
      return MBVSignTypeWarningLowFlyingAircraft;
    case cva::SignType::WarningOpeningOrSwingBridge:
      return MBVSignTypeWarningOpeningOrSwingBridge;
    case cva::SignType::WarningRailwayCrossingWithBarriers:
      return MBVSignTypeWarningRailwayCrossingWithBarriers;
    case cva::SignType::WarningTrafficQueues:
      return MBVSignTypeWarningTrafficQueues;
    case cva::SignType::Count:
      [NSException raise:@"InvalidSignTypeConversion" format:@"Sign type Count should not be passed into converter"];
      exit(-1);
  }
}

NS_ASSUME_NONNULL_END
